<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>br.uff.mvpcortes</groupId>
    <artifactId>prajuda-parent</artifactId>
    <version>0.1-SNAPSHOT</version>

    <name>Prajuda parent project</name>
    <description>WebApp for user-friendly documentation auto-generated using source-code repository and markdown. We intent to use spring-boot and elasticsearch.</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.BUILD-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <packaging>pom</packaging>
    <url>https://gitlab.com/mvpcortes/prajuda</url>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <properties>
        <!-- 'root.basedir' is the path to the root [dspace-src] dir. It must be redefined by each child POM,
        as it is used to reference the LICENSE_HEADER and *.properties file(s) in that directory. Copied from dspace-parent POM.-->
        <root.basedir>${basedir}</root.basedir>
        <mockito-kotlin.version>1.6.0</mockito-kotlin.version>
        <selenium-jupiter.version>2.2.0</selenium-jupiter.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <kotlin.version>1.2.50</kotlin.version>
        <jgit.version>5.0.2.201807311906-r</jgit.version>

        <!-- docker plugin properties-->
        <docker.repositoryURI>br.uff.mvpcortes</docker.repositoryURI>
        <docker.imageName>${project.artifactId}</docker.imageName>
        <dockerfile-maven-plugin.version>1.4.0</dockerfile-maven-plugin.version>
        <phantomjsdriver.version>1.4.4</phantomjsdriver.version>

        <spring-boot.version>2.0.4.BUILD-SNAPSHOT</spring-boot.version>
    </properties>
    <profiles>
        <!-- [[Copied from dspace-parent]]
           These profiles activate the inclusion of various modules into
           the DSpace Build process. They activate automatically if the
           source module is in the local file system, correctly located
           relative to this file.
        -->
        <!--
           Builds prajuda-core
        -->
        <profile>
            <id>prajuda-core</id>
            <activation>
                <file>
                    <exists>prajuda-core/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>prajuda-core</module>
            </modules>
        </profile>
        <!--
               Builds prajuda-web
            -->
        <profile>
            <id>prajuda-web</id>
            <activation>
                <file>
                    <exists>prajuda-web/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>prajuda-web</module>
            </modules>
        </profile>
        <!--
               Builds prajuda-worker
            -->
        <profile>
            <id>prajuda-worker</id>
            <activation>
                <file>
                    <exists>prajuda-worker/pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>prajuda-worker</module>
            </modules>
        </profile>
    </profiles>

    <!--
       Dependency management provides a means to control which
       versions of dependency jars are used for compilation
       and packaging into the distribution.  Rather than placing
       a version in your dependencies, look here first to see if
       its already strongly defined in dspace-parent and dspace-br.uff.mvpcortes.prajuda.api.
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>br.uff.mvpcprtes</groupId>
                <artifactId>prajuda-core</artifactId>
                <version>0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>br.uff.mvpcprtes</groupId>
                <artifactId>prajuda-web</artifactId>
                <version>0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>br.uff.mvpcprtes</groupId>
                <artifactId>prajuda-worker</artifactId>
                <version>0.1-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-test</artifactId>
                <version>3.1.8.RELEASE</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.nhaarman</groupId>
                <artifactId>mockito-kotlin</artifactId>
                <version>${mockito-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.bonigarcia</groupId>
                <artifactId>selenium-jupiter</artifactId>
                <version>${selenium-jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codeborne</groupId>
                <artifactId>phantomjsdriver</artifactId>
                <version>${phantomjsdriver.version}</version>
            </dependency>
            <dependency>
                <groupId>br.uff.mvpcortes</groupId>
                <artifactId>prajuda-core</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <repository>${docker.repositoryURI}/${docker.imageName}</repository>
                        <tag>${project.version}</tag>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <plugin>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <configuration>
                        <args>
                            <arg>-Xjsr305=strict</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                        </compilerPlugins>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>1.2.0</version>
                        </dependency>
                    </dependencies>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>
    <!--<licenses>
        <license>
            
        </license>
    </licenses>-->
    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
